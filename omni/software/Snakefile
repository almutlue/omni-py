#!/usr/bin/env snakemake -s
##
## Handles (installs) the software stack to run a benchmark, including modules/easybuild themselves
##
## Izaskun Mallona 27 May 2024

# re: environments
# https://stackoverflow.com/questions/44316075/using-pyenv-in-a-snakemake-rule

import glob
import re
import os
import os.path as op
from shutil import which
from easybuild_backend import *
from conda_backend import *

WD = op.join('soft')
#MODULEPATH="$HOME/.local/easybuild/modules/all/"
HOME=op.expanduser("~")
LMOD_VERS="8.7"
## use half of the available cores
NTHREADS = int(len(os.sched_getaffinity(0)))/2


export_lmod_env_vars()

## caution now these are sort of hardcoded and not created by easybuild_backend
# for p in [WD, modulepath, buildpath, containerpath, installpath, repositorypath, sourcepath]:
#     if not op.exists(p):
#         os.makedirs(p)

# mind the shell prefix
# shell.prefix("set -o pipefail; ")

easyconfigs=['R-4.3.3-gfbf-2023b.eb', 'Bowtie2-2.5.1-GCC-12.3.0.eb', 'PyInstaller-6.3.0-GCCcore-12.3.0.eb']

rule all:
    input:
        expand(op.join(WD, '{eb}.done'), eb = easyconfigs)
        
rule install_lmod:
    output:
        lmod = op.join(HOME, 'soft', 'lmod', LMOD_VERS, 'libexec', 'lmod')
    log:
        op.join(WD, 'lmod.log')
    params:
        path = WD
    run:
        if check_module_tool() == 1:
            install_lmod()


# rule build_singularity_boostrap:
#     output:
        

for eb in easyconfigs:
    envmodule_name = get_envmodule_name_from_easyconfig(eb, workdir = WD)
    rule:
        name: f"{{easyconfig}}_config".format(easyconfig=eb)
        wildcard_constraints:
            easyconfig=eb
        input:
            lmod = op.join(HOME, 'soft', 'lmod', 'lmod')
            # easyconfig = op.join(WD, 'eb', easyconfig)            
        output:
            flag = op.join(WD, '{easyconfig}.done')
        params:
            workdir = WD,
            LMOD_VERS = LMOD_VERS,
            # cmd = build_easybuild_easyconfig_command(easyconfig = eb,
            #                                          workdir = WD,
            #                                          threads = int(NTHREADS))
            cmd = easybuild_container_based_on_local_boostrap(
                containerpath = '/home/imallona/.local/easybuild/containers',
                toolchain = 'gfbf-2023b',
                easyconfig = eb,
                threads = int(NTHREADS))
            
        threads:
            NTHREADS
        run:
            check_easybuild_status()
            shell("""
            export PATH=$HOME/soft/lmod/"{params.LMOD_VERS}"/libexec:$PATH
            source $HOME/soft/lmod/"{params.LMOD_VERS}"/init/bash
            export LMOD_CMD=$HOME/soft/lmod/"{params.LMOD_VERS}"/libexec/lmod
            bash -c "{params.cmd}"
            """)

            with open(output.flag, 'w') as out:
                out.write(params.cmd)
